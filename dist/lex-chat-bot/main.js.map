{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chatbot/chatbot.component.css","webpack:///./src/app/chatbot/chatbot.component.html","webpack:///./src/app/chatbot/chatbot.component.ts","webpack:///./src/app/chatbot/models/message-model.ts","webpack:///./src/app/chatbot/services/aws-lex.service.ts","webpack:///./src/app/chatbot/services/ontrack.api.ts","webpack:///./src/app/chatbot/services/retire-well.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/user-info/user-info.component.html","webpack:///./src/app/user-info/user-info.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome Lex\\r\\n  </h1>\\r\\n  <app-login [(user)]=\\\"auth\\\"></app-login>\\r\\n  <app-user-info [user]=\\\"auth\\\"></app-user-info>\\r\\n</div>\\r\\n<app-chatbot [user]=\\\"auth\\\"></app-chatbot>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  auth: any;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChatbotComponent } from './chatbot/chatbot.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { OntrackApi } from './chatbot/services/ontrack.api';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RetirewellService } from './chatbot/services/retire-well.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserInfoComponent } from './user-info/user-info.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ChatbotComponent,\r\n    LoginComponent,\r\n    UserInfoComponent\r\n  ],\r\n  providers: [\r\n    OntrackApi,\r\n    RetirewellService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"input#message {\\r\\n  padding: 4px;\\r\\n  font-size: 1em;\\r\\n  width: 600px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\ninput::-webkit-input-placeholder {\\r\\n  color: #ccc;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\ninput:-ms-input-placeholder {\\r\\n  color: #ccc;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\ninput::-ms-input-placeholder {\\r\\n  color: #ccc;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\ninput::placeholder {\\r\\n  color: #ccc;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\np.userRequest {\\r\\n  margin: 4px;\\r\\n  padding: 4px 10px 4px 10px;\\r\\n  border-radius: 4px;\\r\\n  min-width: 50%;\\r\\n  max-width: 85%;\\r\\n  float: left;\\r\\n  background-color: #f0f8ff;\\r\\n}\\r\\n\\r\\np.lexResponse {\\r\\n  margin: 4px;\\r\\n  padding: 4px 10px 4px 10px;\\r\\n  border-radius: 4px;\\r\\n  text-align: right;\\r\\n  min-width: 50%;\\r\\n  max-width: 85%;\\r\\n  float: right;\\r\\n  background-color: #dcdcdc;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\np.lexError {\\r\\n  margin: 4px;\\r\\n  padding: 4px 10px 4px 10px;\\r\\n  border-radius: 4px;\\r\\n  text-align: right;\\r\\n  min-width: 50%;\\r\\n  max-width: 85%;\\r\\n  float: right;\\r\\n  background-color: #f77;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background: #e9e9e9;\\r\\n  color: #9a9a9a;\\r\\n  font: 100%/1.5em \\\"Droid Sans\\\", sans-serif;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\na { text-decoration: none; }\\r\\n\\r\\nfieldset {\\r\\n  border: 0;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nh4, h5 {\\r\\n  line-height: 1.5em;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  background: #e9e9e9;\\r\\n  border: 0;\\r\\n  box-sizing: content-box;\\r\\n  height: 1px;\\r\\n  margin: 0;\\r\\n  min-height: 1px;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  border: 0;\\r\\n  display: block;\\r\\n  height: auto;\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  border: 0;\\r\\n  color: inherit;\\r\\n  font-family: inherit;\\r\\n  font-size: 100%;\\r\\n  line-height: normal;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\np { margin: 0; }\\r\\n\\r\\n.clearfix { *zoom: 1; }\\r\\n\\r\\n.clearfix:before, .clearfix:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n}\\r\\n\\r\\n.clearfix:after { clear: both; }\\r\\n\\r\\n#live-chat {\\r\\n  bottom: 0;\\r\\n  font-size: 14px;\\r\\n  right: 24px;\\r\\n  position: fixed;\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\n#live-chat header {\\r\\n  background: #293239;\\r\\n  border-radius: 5px 5px 0 0;\\r\\n  color: #fff;\\r\\n  cursor: pointer;\\r\\n  padding: 16px 24px;\\r\\n}\\r\\n\\r\\n#live-chat h4:before {\\r\\n  background: #1a8a34;\\r\\n  border-radius: 50%;\\r\\n  content: \\\"\\\";\\r\\n  display: inline-block;\\r\\n  height: 8px;\\r\\n  margin: 0 8px 0 0;\\r\\n  width: 8px;\\r\\n}\\r\\n\\r\\n#live-chat h4 {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n#live-chat h5 {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n#live-chat form {\\r\\n  padding: 24px;\\r\\n}\\r\\n\\r\\n#live-chat input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 3px;\\r\\n  padding: 8px;\\r\\n  margin-left: 33px;\\r\\n  width: 315px;\\r\\n}\\r\\n\\r\\n.chat-message-counter {\\r\\n  background: #e62727;\\r\\n  border: 1px solid #fff;\\r\\n  border-radius: 50%;\\r\\n  display: none;\\r\\n  font-size: 12px;\\r\\n  font-weight: bold;\\r\\n  height: 28px;\\r\\n  left: 0;\\r\\n  line-height: 28px;\\r\\n  margin: -15px 0 0 -15px;\\r\\n  position: absolute;\\r\\n  text-align: center;\\r\\n  top: 0;\\r\\n  width: 28px;\\r\\n}\\r\\n\\r\\n.chat-close {\\r\\n  background: #1b2126;\\r\\n  border-radius: 50%;\\r\\n  color: #fff;\\r\\n  display: block;\\r\\n  float: right;\\r\\n  font-size: 10px;\\r\\n  height: 16px;\\r\\n  line-height: 16px;\\r\\n  margin: 2px 0 0 0;\\r\\n  text-align: center;\\r\\n  width: 16px;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  background: #f8f8f8;\\r\\n}\\r\\n\\r\\n.chat-history {\\r\\n  height: 252px;\\r\\n  padding: 8px 24px;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.chat-message {\\r\\n  margin: 16px 0;\\r\\n}\\r\\n\\r\\n.chat-message img {\\r\\n  border-radius: 50%;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.chat-message-content {\\r\\n  margin-left: 56px;\\r\\n}\\r\\n\\r\\n.chat-time {\\r\\n  float: right;\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\n.chat-feedback {\\r\\n  font-style: italic;\\r\\n  margin: 0 0 0 80px;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"live-chat\\\">\\r\\n  <header (click)=\\\"onShowHideChatWindow()\\\" class=\\\"clearfix\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"chat-close\\\">x</a>\\r\\n    <h4>{{bot.botName}}</h4>\\r\\n    <span class=\\\"chat-message-counter\\\">3</span>\\r\\n  </header>\\r\\n  <div [@expandCollapseChatWindow] *ngIf=\\\"options.isChatWindowVisible\\\" class=\\\"chat\\\">\\r\\n    <div  #scrollMe class=\\\"chat-history\\\">\\r\\n      <div class=\\\"chat-message clearfix\\\" *ngFor=\\\"let msg of messages\\\">\\r\\n        <div>\\r\\n          <span class=\\\"chat-time\\\">{{msg.messageTime}}</span>\\r\\n          <!--replace with switch case-->\\r\\n          <p *ngIf=\\\"msg.messageBy==bot.botName\\\" class='lexResponse'>{{msg.messageText}}</p>\\r\\n          <p *ngIf=\\\"msg.messageBy==options.user\\\" class='userRequest'>{{msg.messageText}}</p>\\r\\n          <p *ngIf=\\\"msg.messageBy=='error'\\\" class='lexError'>{{msg.messageText}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"chat-message-content clearfix\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <input id=\\\"message\\\" type=\\\"text\\\" (keyup.enter)=\\\"pushChat($event);\\\" placeholder={{options.inputPlaceHolder}}>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { AfterViewChecked, Component, ElementRef, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { MessageModel, DialogState } from './models/message-model';\r\nimport { AwsLexService } from './services/aws-lex.service';\r\n\r\n@Component({\r\n  selector: 'app-chatbot',\r\n  templateUrl: './chatbot.component.html',\r\n  styleUrls: ['./chatbot.component.css'],\r\n  animations: [\r\n    trigger('expandCollapseChatWindow', [\r\n      state('void', style({\r\n        'height': '0px',\r\n        overflow: 'hidden'\r\n      })),\r\n      transition(':enter', [\r\n        animate('500ms ease-in-out', style({\r\n          'height': '*',\r\n          overflow: 'hidden'\r\n        }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('500ms ease-in-out', style({\r\n          'height': '0px',\r\n          overflow: 'hidden'\r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class ChatbotComponent implements OnInit, AfterViewChecked {\r\n\r\n  // Auto-scroll chat window\r\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\r\n  @Input() user: any;\r\n\r\n  options = this._lexService.options;\r\n  bot = this._lexService.bot;\r\n  messages = this._lexService.messages;\r\n\r\n  constructor(private _lexService: AwsLexService) { }\r\n\r\n  ngOnInit() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  // push message from user to AWS chatbot and wait for response\r\n  pushChat(event: Event) {\r\n    // get message typed by user\r\n    const message = this._getMessage(event);\r\n    // add message to messages array\r\n    this._lexService.push(new MessageModel(message, this.options.user));\r\n    if (message.length > 0) {\r\n      this._lexService.postText(message, this.user, function (err, data) {\r\n        this._processMessage(err, data);\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  // Auto-scroll chat window\r\n  scrollToBottom(): void {\r\n    try {\r\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch (err) { }\r\n  }\r\n\r\n  // show hide chat window on chat header click\r\n  onShowHideChatWindow() {\r\n    this.options.isChatWindowVisible = this.options.isChatWindowVisible === false ? true : false;\r\n  }\r\n\r\n  private _processMessage(err, data) {\r\n    if (err) {\r\n      // error\r\n      const rs = JSON.stringify({ data, err }, undefined, 2);\r\n      this._lexService.push(new MessageModel(rs, 'error'));\r\n    }\r\n    if (data) {\r\n      this.bot.sessionAttributes = data.sessionAttributes;\r\n      if (data.dialogState === DialogState.ReadyForFulfillment) {\r\n        this._lexService.push(new MessageModel('Ready for fulfillment!', this.bot.botName));\r\n        // TODO:  show slot values\r\n      } else {\r\n        // capture the sessionAttributes for the next cycle\r\n        this._lexService.push(new MessageModel(data.message, this.bot.botName));\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getMessage(event): any {\r\n    const msg = (<HTMLInputElement>event.target).value;\r\n    (<HTMLInputElement>event.target).value = '';\r\n    (<HTMLInputElement>event.target).focus();\r\n    return msg;\r\n  }\r\n}\r\n\r\n","export class MessageModel {\r\n  public messageText: string;\r\n  public messageTime: string;\r\n  public messageBy: string;\r\n\r\n  constructor(messageText: string, messageBy: string) {\r\n    this.messageText = messageText;\r\n    this.messageTime = new Date().getHours() + ':' +\r\n      (new Date().getMinutes() < 10 ? '0' : '') + new Date().getMinutes();\r\n    this.messageBy = messageBy;\r\n  }\r\n}\r\n\r\nexport enum ModelType {\r\n  Goals = 1,\r\n  Households,\r\n  Persons,\r\n  PersonFinancials,\r\n  HouseholdFinancials,\r\n  Assets,\r\n  Debts,\r\n  Assumptions,\r\n  PersonCalculates,\r\n  PersonFinancialCalculates,\r\n  RiskScores,\r\n  WillingnessScores,\r\n  Primary,\r\n  Activities,\r\n  Insurances,\r\n  HouseholdCalulates,\r\n  Scores,\r\n}\r\n\r\nexport const DialogState = {\r\n  // Lambda service\r\n  Close: 'Close', // Finish conversation\r\n  ConfirmIntent: 'ConfirmIntent', // Asking for confirmation\r\n  Delegate: 'Delegate', // Out of control\r\n  ElicitIntent: 'ElicitIntent', // Error, Start a dialog\r\n  ElicitSlot: 'ElicitSlot', // Asking for information\r\n\r\n  // Lex service\r\n  Fulfilled: 'Fulfilled', // Match\r\n  ReadyForFulfillment: 'ReadyForFulfillment', // Not match\r\n  Failed: 'Failed', // Error\r\n};\r\n\r\nexport const lexFormat = {\r\n  cloudName: 'aws',\r\n  region: 'us-east-1',\r\n  identityPoolId: 'us-east-1:4b662f9b-cef6-401e-a6a6-cb486cc588d1',\r\n\r\n  inputEventFormat: {\r\n    currentIntent: {\r\n      name: \"intent-name\",\r\n      slots: {\r\n        slotname: \"value\",\r\n      },\r\n      slotDetails: {\r\n        slotname: {\r\n          resolutions: [\r\n            { value: \"resolved value\" },\r\n            { value: \"resolved value\" }\r\n          ],\r\n          originalValue: \"original text\"\r\n        }\r\n      },\r\n      confirmationStatus: \"None, Confirmed, or Denied (intent confirmation, if configured)\"\r\n    },\r\n    bot: {\r\n      name: \"bot name\",\r\n      alias: \"bot alias\",\r\n      version: \"bot version\"\r\n    },\r\n    userId: \"User ID specified in the POST request to Amazon Lex.\",\r\n    inputTranscript: \"Text used to process the request\",\r\n    invocationSource: \"FulfillmentCodeHook or DialogCodeHook\",\r\n    outputDialogMode: \"Text or Voice, based on ContentType request header in runtime API request\",\r\n    messageVersion: \"1.0\",\r\n    sessionAttributes: {\r\n      key: \"value\",\r\n    },\r\n    requestAttributes: {\r\n      key: \"value\",\r\n    }\r\n  },\r\n\r\n  dialogAction: {\r\n    Close: {\r\n      type: \"Close\",\r\n      fulfillmentState: \"Fulfilled or Failed\",\r\n      message: {\r\n        contentType: \"PlainText or SSML or CustomPayload\",\r\n        content: \"Message to convey to the user. For example, Thanks, your pizza has been ordered.\"\r\n      },\r\n      responseCard: {\r\n        version: 'integer - value',\r\n        contentType: \"application/vnd.amazonaws.card.generic\",\r\n        genericAttachments: [\r\n          {\r\n            title: \"card-title\",\r\n            subTitle: \"card-sub-title\",\r\n            imageUrl: \"URL of the image to be shown\",\r\n            attachmentLinkUrl: \"URL of the attachment to be associated with the card\",\r\n            buttons: [\r\n              {\r\n                text: \"button-text\",\r\n                value: \"Value sent to server on button click\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\n    ConfirmIntent: {\r\n      type: \"ConfirmIntent\",\r\n      message: {\r\n        contentType: \"PlainText or SSML or CustomPayload\",\r\n        content: \"Message to convey to the user. For example, Are you sure you want a large pizza?\"\r\n      },\r\n      intentName: \"intent-name\",\r\n      slots: {\r\n        slotname: \"value\",\r\n      },\r\n      responseCard: {\r\n        version: 'integer-value',\r\n        contentType: \"application/vnd.amazonaws.card.generic\",\r\n        genericAttachments: [\r\n          {\r\n            title: \"card-title\",\r\n            subTitle: \"card-sub-title\",\r\n            imageUrl: \"URL of the image to be shown\",\r\n            attachmentLinkUrl: \"URL of the attachment to be associated with the card\",\r\n            buttons: [\r\n              {\r\n                text: \"button-text\",\r\n                value: \"Value sent to server on button click\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\n    Delegate: {\r\n      type: \"Delegate\",\r\n      slots: {\r\n        slotname: \"value\"\r\n      }\r\n    },\r\n\r\n    ElicitIntent: {\r\n      type: \"ElicitIntent\",\r\n      message: {\r\n        contentType: \"PlainText or SSML or CustomPayload\",\r\n        content: \"Message to convey to the user. For example, What can I help you with?\"\r\n      },\r\n      responseCard: {\r\n        version: 'integer-value',\r\n        contentType: \"application/vnd.amazonaws.card.generic\",\r\n        genericAttachments: [\r\n          {\r\n            title: \"card-title\",\r\n            subTitle: \"card-sub-title\",\r\n            imageUrl: \"URL of the image to be shown\",\r\n            attachmentLinkUrl: \"URL of the attachment to be associated with the card\",\r\n            buttons: [\r\n              {\r\n                text: \"button-text\",\r\n                value: \"Value sent to server on button click\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\n    ElicitSlot: {\r\n      type: \"ElicitSlot\",\r\n      message: {\r\n        contentType: \"PlainText or SSML or CustomPayload\",\r\n        content: \"Message to convey to the user. For example, What size pizza would you like?\"\r\n      },\r\n      intentName: \"intent-name\",\r\n      slots: {\r\n        slotname: \"value\",\r\n      },\r\n      slotToElicit: \"slot-name\",\r\n      responseCard: {\r\n        version: 'integer-value',\r\n        contentType: \"application/vnd.amazonaws.card.generic\",\r\n        genericAttachments: [\r\n          {\r\n            title: \"card-title\",\r\n            subTitle: \"card-sub-title\",\r\n            imageUrl: \"URL of the image to be shown\",\r\n            attachmentLinkUrl: \"URL of the attachment to be associated with the card\",\r\n            buttons: [\r\n              {\r\n                text: \"button-text\",\r\n                value: \"Value sent to server on button click\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PostTextRequest } from 'aws-sdk/clients/lexruntime';\r\nimport * as AWS from 'aws-sdk';\r\nimport { MessageModel } from '../models/message-model';\r\nimport { RetirewellService } from './retire-well.service';\r\nimport { OntrackApi } from './ontrack.api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AwsLexService {\r\n\r\n  bot = botRequset;\r\n  options = lexUI;\r\n  // LexRuntime object declaration\r\n  private _awsLex: AWS.LexRuntime;\r\n  // Chat messages array\r\n  private _messages: MessageModel[] = [new MessageModel(this.options.firstMessage, this.bot.botName)];\r\n  public get messages(): MessageModel[] {\r\n    return this._messages;\r\n  }\r\n\r\n\r\n  constructor(private _retirewellService: RetirewellService,\r\n    private _ontrackApi: OntrackApi) {\r\n\r\n    const credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: awsConfig.IdentityPoolId});\r\n    // Set AWS configurations\r\n    AWS.config.region = awsConfig.region;\r\n    AWS.config.credentials = credentials;\r\n\r\n    // Initialize AWS Lex object\r\n    this._awsLex = new AWS.LexRuntime();\r\n  }\r\n\r\n  public push(message) {\r\n    // send it to the Lex runtime\r\n    this._messages.push(message);\r\n  }\r\n\r\n  public postText(message, user, callback) {\r\n    // send it to the Lex runtime\r\n    this.bot.inputText = message;\r\n    this.bot.sessionAttributes  = {\r\n      access_token: user ? user.access_token : null,\r\n      api_url: this._ontrackApi.apiUrl,\r\n    };\r\n    this._awsLex.postText(this.bot, callback);\r\n  }\r\n}\r\n\r\n\r\nconst awsConfig = {\r\n  region: 'us-east-1',\r\n  IdentityPool: 'ontrack',\r\n  IdentityPoolId: 'us-east-1:4b662f9b-cef6-401e-a6a6-cb486cc588d1',\r\n};\r\n\r\nconst botRequset: PostTextRequest = {\r\n  botName: 'ontrack',\r\n  botAlias: 'LATEST',\r\n  userId: 'ontrack',\r\n  inputText: '',\r\n  sessionAttributes: {}\r\n};\r\n\r\nconst lexUI = {\r\n  inputPlaceHolder: 'Write a message',\r\n  firstMessage: 'Hi my name is Otto, the OnTrack Help Bot. What can I help you with?',\r\n  isChatWindowVisible: false,\r\n  user: 'user',\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class OntrackApi {\r\n  apiUrl = 'http://ontrack-prototype.codestream.com.sg/api';\r\n\r\n  private _options = {};\r\n\r\n  constructor(private _httpClient: HttpClient) {}\r\n\r\n  private handleError<T>(operation = 'operation', result?: T): any {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(operation, error); // log to console instead\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  get<T>(apiUrl: string): Observable<T> {\r\n    return this._httpClient\r\n      .get<T>(`${this.apiUrl}/${apiUrl}`, this._options)\r\n      .pipe(\r\n        tap(_ => console.log('get', apiUrl)),\r\n        catchError(this.handleError('get', []))\r\n      );\r\n  }\r\n\r\n  signin(emailAddress: string, password: string) {\r\n    const body = `grant_type=password&username=${emailAddress}&password=${password}&client_id=nab-client`;\r\n    return this._httpClient.post(`${this.apiUrl}/token`, body)\r\n      .pipe(\r\n        tap(_ => {\r\n          console.log('login', _);\r\n          this._options = this._getRequestHeader(_);\r\n        }),\r\n        catchError(this.handleError('post', []))\r\n      );\r\n  }\r\n\r\n  post<T>(apiUrl: string, body: any): Observable<T> {\r\n    return this._httpClient\r\n      .post<T>(`${this.apiUrl}/${apiUrl}`, body, this._options)\r\n      .pipe(\r\n        tap(_ => console.log('post', apiUrl)),\r\n        catchError(this.handleError('post', []))\r\n      );\r\n  }\r\n\r\n  private _getAuthorizationToken(auth: any): string {\r\n    const authToken = auth.access_token;\r\n    return authToken;\r\n  }\r\n\r\n  private _getRequestHeader(auth: any): any {\r\n    const authToken = this._getAuthorizationToken(auth);\r\n    const options = { headers: new HttpHeaders({ Authorization: `Bearer ${authToken}`}) };\r\n    return options;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OntrackApi } from './ontrack.api';\r\nimport { ModelType } from '../models/message-model';\r\n\r\n@Injectable()\r\nexport class RetirewellService {\r\n\r\n  constructor(private _api: OntrackApi) {}\r\n\r\n  public login(emailAddress: string, password: string): Observable<any> {\r\n    return this._api.signin(emailAddress, password);\r\n  }\r\n\r\n  public getProfile() {\r\n    const url = `account/profile?userName=ontrack@admin.com`;\r\n    return this._api.get(url);\r\n  }\r\n\r\n  public getSurveyInfo(modelType: ModelType): Observable<any> {\r\n    const url = `chat-bot/get-survey?modelType=${modelType}`;\r\n    return this._api.get(url);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"dropdown-menu\\\">\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleDropdownFormEmail1\\\">Email address</label>\\r\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"loginModel.Email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" id=\\\"exampleDropdownFormEmail1\\\"\\r\\n      placeholder=\\\"email@example.com\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleDropdownFormPassword1\\\">Password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"loginModel.Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n      id=\\\"exampleDropdownFormPassword1\\\" placeholder=\\\"Password\\\">\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signin()\\\">Sign in</button>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getProfile()\\\">Get Profile</button>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { RetirewellService } from '../chatbot/services/retire-well.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginModel = {\r\n    Email: 'ontrack@admin.com',\r\n    Password: 'admin'\r\n  };\r\n\r\n  @Input() user: any;\r\n  @Output() userChange = new EventEmitter();\r\n\r\n  constructor(private _retirewellService: RetirewellService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  signin() {\r\n    this._retirewellService.login(this.loginModel.Email, this.loginModel.Password)\r\n      .subscribe(auth => {\r\n        this.user = auth;\r\n        this.userChange.emit(this.user);\r\n      });\r\n  }\r\n\r\n  \r\n  getProfile() {\r\n    this._retirewellService.getProfile()\r\n      .subscribe(profile => console.log(profile));\r\n  }\r\n\r\n}\r\n","module.exports = \"<pre>\\r\\n  {{this.userInfoStr}}\\r\\n</pre>\\r\\n\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n})\r\nexport class UserInfoComponent implements OnChanges {\r\n\r\n  @Input() user = {};\r\n  userInfoStr: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    this.userInfoStr = JSON.stringify(this.user, undefined, 2);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}